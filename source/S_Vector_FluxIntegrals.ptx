<?xml version="1.0"?>
<section xmlns:xi="http://www.w3.org/2001/XInclude" xml:id="S_Vector_FluxInt">
  <title>Flux Integrals</title>
<objectives>
  <ul>
    <li>
      <p>
        How can we measure how much of a vector field flows through a surface in space?
      </p>
    </li>
    <li>
      <p>
        How can we calculate the amount of a vector field that flows through common surfaces, such as the graph of a function <m>z=f(x,y)</m>?
      </p>
    </li>
  </ul>
</objectives>
<introduction>
  <p>
    <xref ref="S-11-6-Parametric-Surfaces-Surface-Area"/> showed how we can use vector valued functions of two variables to give a parametrization of a surface in space. For instance, the function <m>\vr(s,t)=\langle 2\cos(t)\sin(s), 2\sin(t)\sin(s),2\cos(s)\rangle</m> with domain <m>0\leq t\leq 2 \pi</m> and <m>0\leq s\leq \pi</m> parametrizes a sphere of radius <m>2</m> centered at the origin. <xref ref="S-11-6-Parametric-Surfaces-Surface-Area"/> also gives examples of how to write parametrizations based on other geometric relationships like when one coordinate can be written as a function of the other two. In <xref ref="SS-11-6-2-Surface-Area-Parametrically-Defined-Surfaces"/>, we set up a Riemann sum based on a parametrization that would measure the surface area of our curved surfaces in space.
  </p>
  <p>
    In <xref ref="fig_Vector_FluxInt_ParaPic"/>, you can see a surface plotted using a parametrization <m>\vr(s,t)=\langle{f(s,t),g(s,t),h(s,t)}\rangle</m>. The red lines represent curves where <m>s</m> varies and <m>t</m> is held constant, while the yellow lines represent curves where <m>t</m> varies and <m>s</m> is held constant. The vector in red is
    <m>\vr_s=\frac{\partial \vr}{\partial s}=\langle{f_s,g_s,h_s}\rangle</m> which measures the direction and magnitude of change in the coordinates of the surface when only <m>s</m> is varied. Similarly, the vector in yellow is <m>\vr_t=\frac{\partial \vr}{\partial t}=\langle{f_t,g_t,h_t}\rangle</m> which measures the direction and magnitude of change in the coordinates of the surface when only <m>t</m> is varied. You can see that the parallelogram that is formed by <m>\vr_s</m> and <m>\vr_t</m> is tangent to the surface. The area of this parallelogram offers an approximation for the surface area of a patch of the surface.
  </p>
  <figure xml:id="fig_Vector_FluxInt_ParaPic">
    <caption>A three-dimensional plot of <xref ref="F_11_6_approx"/></caption>
    <interactive xml:id="sage_para_pic" platform="sage" width="100%" aspect="1:1.1">
      <slate surface="sage">
        var('t,s,u,v,z,y,z')
        f=-x^2/2-3*y^3/3
        @interact
        def _(a=slider(-1,1,.5,0,label="s value"),b=slider(-1,1,.5,.5,label="t value")):
          plot1=plot3d(f,(x,-1,1),(y,-1,1),frame=False,opacity=.3)+sphere((a,b,f(x=a,y=b)),size=.05,color="black")
          for i in range(0,5):
            plot1+=parametric_plot3d((s,-1+i/2,f(x=s,y=-1+i/2)),(s,-1,1),color="red")
            plot1+=parametric_plot3d((-1+i/2,s,f(y=s,x=-1+i/2)),(s,-1,1),color="yellow")
          f_val=f(x=a,y=b)
          pos=(a,b,f_val)
          fx=diff(f,x)(x=a,y=b)
          fy=diff(f,y)(x=a,y=b)
          vt=(1/2+a,b,1/2*fx+f_val)
          vs=(a,b+1/2,1/2*fy+f_val)
          cr=(a-fx/2,b-fy/2,1/2+f_val)
          vectt=arrow3d(pos,vt,color="red")
          vects=arrow3d(pos,vs,color="yellow")
          plot1+=vectt+vects
          plot1+=parametric_plot3d((a+t/2,b+s/2,f_val+t/2*fx+s/2*fy),(t,0,1),(s,0,1),color="orange",opacity=.6)
          plot1+=arrow3d(pos,cr,color="green")
          show(plot1)
      </slate>
    </interactive>
  </figure>

  <p>
    From <xref ref="S-9-4-Cross-Product"/>, we also know that
    <m>\vr_s\times \vr_t</m> (plotted in green) will be orthogonal to both <m>\vr_s</m> and <m>\vr_t</m> and its magnitude will be given by the area of the parallelogram.
  </p>
  <exploration xml:id="PA_Vector_FluxInt">
    <introduction>
      <p>
        In this activity we will explore the parametrizations of a few familiar surfaces and confirm some of the geometric properties described in the introduction above.
      </p>
    </introduction>
    <task xml:id="task_PA_Vector_FluxInt_Param">
      <introduction>
        <p>
          Use the ideas from <xref ref="S-11-6-Parametric-Surfaces-Surface-Area"/> to give a parametrization <m>\vr(s,t)</m> of each of the following surfaces. Be sure to specify the bounds on each of your parameters.
	</p>
      </introduction>
      <task>
        <statement>
	  <p>A sphere centered at the origin of radius 3.</p>
	</statement>
      </task>
      <task>
        <statement>
	  <p>A right circular cylinder centered on the <m>x</m>-axis
	  of radius 2 when <m>0\leq x\leq 3</m>.</p>
	</statement>
      </task>
      <task>
        <statement>
	  <p>The first octant portion of the plane <m>x+2y+3z=6</m>.
	  </p>
	</statement>
      </task>
    </task>
    <task>
      <statement>
        <p>
          Draw a graph of each of the three surfaces from the previous part. Label the points that correspond to <m>(s,t)</m> points of <m>(0,0)</m>, <m>(0,1)</m>, <m>(1,0)</m>, and <m>(2,3)</m>.
        </p>
      </statement>
    </task>
    <task xml:id="task_PA_Vector_FluxInt_Tangents">
      <statement>
        <p>
          For each parametrization from <xref ref="task_PA_Vector_FluxInt_Param" text="local">part</xref>, calculate <m>\vr_s</m>, <m>\vr_t</m>, and <m>\vr_s \times \vr_t</m>.
        </p>
      </statement>
    </task>
    <task xml:id="task_PA_Vector_FluxInt_partd">
      <statement>
        <p>
          For each parametrization from <xref ref="task_PA_Vector_FluxInt_Param" text="local">part</xref>, find the value for <m>\vr_s</m>,<m>\vr_t</m>, and <m>\vr_s \times \vr_t</m> at the <m>(s,t)</m> points of <m>(0,0)</m>, <m>(0,1)</m>, <m>(1,0)</m>, and <m>(2,3)</m>.
        </p>
      </statement>
    </task>
    <task>
      <statement>
        <p>
          Draw your vector results from <xref ref="task_PA_Vector_FluxInt_partd" text="local"/> on your graphs and confirm the geometric properties described in the introduction to this section. Namely, <m>\vr_s</m> and <m>\vr_t</m> should be tangent to the surface, while <m>\vr_s \times \vr_t</m> should be orthogonal to the surface (in addition to <m>\vr_s</m> and <m>\vr_t</m>).
        </p>
      </statement>
    </task>
  </exploration>
  <p>
    As we saw in <xref ref="S-11-6-Parametric-Surfaces-Surface-Area"/>, we can set up a Riemann sum of the areas for the parallelograms in <xref ref="fig_Vector_FluxInt_ParaPic"/> to approximate the surface area of the region plotted by our parametrization. <xref ref="E_surface_area" text="global">Equation</xref> shows that we can compute the exact surface by taking a limit of a Riemann sum which will correspond to integrating the magnitude of <m>\vr_s \times \vr_t</m> over the appropriate parameter bounds. What if we wanted to measure a quantity other than the surface area? In the next section, we will explore a specific case of this question: How can we measure the amount of a three dimensional vector field that flows through a particular section of a surface? The geometric tools we have reviewed in this section will be very valuable, especially the vector <m>\vr_s \times \vr_t</m>.
  </p>
</introduction>
<subsection xml:id="SS_Vector_FluxInt_Idea">
  <title>The Idea of the Flux of a Vector Field through a Surface</title>
  <p>
    In this section we will look at how to measure the amount of a vector field that flows through a surface in space.  <xref ref="fig_Vector_FluxInt_FieldSurface1"/> illustrates a plot that demonstrates this idea. Our definition of divergence in <xref ref="S_Vector_Div" /> looked at measuring the amount of vector field flowing out of a small region on a 2D plane. In this subsection, we will set up a precise measurement of this same measurement but over a region of a curved surface in 3D.
  </p>
  <figure xml:id="fig_Vector_FluxInt_FieldSurface1">
    <caption>A three-dimensional vector field and a surface</caption>
    <interactive platform="sage" width="87%" aspect="1:1.05">
      <slate surface="sage">
        var('t,s,u,v,z,y,z')
        f=-x^2/5-3*y^3/8
        Fx=x^2
        Fy=y
        Fz=(x+y+z)/3+1
        plot1=plot3d(f,(x,-1,1),(y,-1,1),frame=False,opacity=.3,aspect_ratio=1)
        for i in range(0,5):
          plot1+=parametric_plot3d((s,-1+i/2,f(x=s,y=-1+i/2)),(s,-1,1),color="gray")
          plot1+=parametric_plot3d((-1+i/2,s,f(y=s,x=-1+i/2)),(s,-1,1),color="gray")
        plot1+=plot_vector_field3d((Fx,Fy,Fz),(x,-1,1),(y,-1,1),(z,-1,1))
        show(plot1)
      </slate>
    </interactive>
  </figure>
  <p>
    We don't care about the output of the vector field at points away from the surface. We would really would like to  examine what the output vectors for the <m>(x,y,z)</m> points on our surface. So instead, we will look at <xref ref="fig_Vector_FluxInt_FieldSurface2"/> which plots the output of our vector field at an array of points on our surface.
  </p>
  <figure xml:id="fig_Vector_FluxInt_FieldSurface2">
    <caption>A three-dimensional vector field evaluated along a surface</caption>
    <interactive platform="sage" width="87%" aspect="1:1.05">
      <slate surface="sage">
        var('t,s,u,v,z,y,z')
        a=1
        b=1/2
        f=-x^2/5-3*y^3/8
        Fx=x^2
        Fy=y
        Fz=(x+y+z)/3+1
        plot1=plot3d(f,(x,-1,1),(y,-1,1),frame=False,opacity=.3,aspect_ratio=1)
        for i in range(0,5):
          plot1+=parametric_plot3d((s,-1+i/2,f(x=s,y=-1+i/2)),(s,-1,1),color="gray")
          plot1+=parametric_plot3d((-1+i/2,s,f(y=s,x=-1+i/2)),(s,-1,1),color="gray")
        f_val=f(x=a,y=b)
        pos=(a,b,f_val)
        fx=diff(f,x)(x=a,y=b)
        fy=diff(f,y)(x=a,y=b)
        vt=(1/2+a,b,1/2*fx+f_val)
        vs=(a,b+1/2,1/2*fy+f_val)
        cr=(a-fx/2,b-fy/2,1/2+f_val)
        for i in range(0,5):
          for j in range (0,5):
            plot1+=arrow3d((-1+i/2,-1+j/2,f(x=-1+i/2,y=-1+j/2)),(-1+i/2+Fx(x=-1+i/2,y=-1+j/2), -1+j/2+Fy(x=-1+i/2,y=-1+j/2),f(x=-1+i/2,y=-1+j/2)+Fz(x=-1+i/2,y=-1+j/2,z=f(x=-1+i/2,y=-1+j/2))),color="blue")
        show(plot1)
      </slate>
    </interactive>
  </figure>
  <p>
    The central question we would like to consider is <q>How can we measure the amount of a three dimensional vector field that flows through a particular section of a curved surface?</q>, so we only need to consider the amount of the vector field that flows <alert>through</alert> the surface. Any portion of our vector field that flows along (or tangent) to the surface will not contribute to the amount that goes through the surface. In <xref ref="fig_Vector_FluxInt_FieldSurface3" />, we have split the vector field for points on our surface into two components. One component, plotted in green, is orthogonal to the surface. The component that is tangent to the surface is plotted in purple.
  </p>
  <figure xml:id="fig_Vector_FluxInt_FieldSurface3">
    <caption>The decomposition of three-dimensional vector field
    evaluated along a surface into normal and tangent components</caption>
    <interactive platform="sage" width="87%" aspect="1:1.05">
      <slate surface="sage">
        var('t,s,u,v,z,y,z')
        f=-x^2/5-3*y^3/8
        Fx=x^2
        Fy=y
        Fz=(x+y+z)/3+1
        plot1=plot3d(f,(x,-1,1),(y,-1,1),frame=False,opacity=.3,aspect_ratio=1)
        for i in range(0,5):
          plot1+=parametric_plot3d((s,-1+i/2,f(x=s,y=-1+i/2)),(s,-1,1),color="gray")
          plot1+=parametric_plot3d((-1+i/2,s,f(y=s,x=-1+i/2)),(s,-1,1),color="gray")
        for i in range(0,5):
          for j in range (0,5):
            posx=-1+i/2
            posy=-1+j/2
            posz=f(x=posx,y=posy)
            F1=Fx(x=posx,y=posy)
            F2=Fy(x=posx,y=posy)
            F3=Fz(x=posx,y=posy,z=posz)
            plot1+=arrow3d((posx,posy,posz),(posx+Fx(x=posx,y=posy),posy+Fy(x=posx,y=posy), posz+Fz(x=posx,y=posy,z=posz)),color="blue")
            N=(-diff(f,x)(x=posx,y=posy)/2,-diff(f,y)(x=posx,y=posy)/2,1/2)
            Nfrac=(F1*N[0]+F2*N[1]+F3*N[2])/(N[0]^2+N[1]^2+N[2]^2)
            FNx=Nfrac*N[0]
            FNy=Nfrac*N[1]
            FNz=Nfrac*N[2]
            plot1+=arrow3d((posx,posy,posz),(posx+FNx,posy+FNy,posz+FNz),color="green")
            plot1+=arrow3d((posx,posy,posz),(posx+F1-FNx,posy+F2-FNy,posz+F3-FNz),color="purple")
            plot1+=arrow3d((.25,.25,-.2),(.3,.2,.3),color="yellow")
        show(plot1)
      </slate>
    </interactive>
  </figure>
  <p>
    In order to measure the amount of the vector field that moves through the plotted section of the surface, we must find the accumulation of the lengths of the green vectors in <xref ref="fig_Vector_FluxInt_FieldSurface3"/>. Notice that some of the green vectors are moving through the surface in a direction opposite of others. In other words, we will need to pay attention to the direction in which these vectors move through our surface and not just the magnitude of the green vectors.
  </p>
  <p>
    If we have a parametrization of the surface, then the vector <m>\vr_s \times \vr_t</m> varies smoothly across our surface and gives a consistent way to describe which direction we choose as <q>through</q> the surface. If we define a positive flow through our surface as being consistent with the yellow vector in <xref ref="fig_Vector_FluxInt_FieldSurface3"/>, then there is more positive flow (in terms of both magnitude and area) than negative flow through the surface. Thus, the <em>net</em> flow of the vector field through this surface is positive.
  </p>
  <activity>
    <title>Visualizing flux through a surface</title>
    <statement>
      <p>
        In this activity, you will compare the net flow of different vector fields through our sample surface. In <xref ref="fig_Vector_FluxInt_FieldPicker"/> you can select between five different vector fields. Once you select a vector field, the vector field for a set of points on the surface will be plotted in blue. Each blue vector will also be split into its normal component (in green) and its tangential component (in purple). The yellow vector defines the direction for positive flow through the surface.
      </p>
      <p>
        Look at each vector field and order the vector fields from greatest flow through the surface to least flow through the surface. Remember that a negative net flow through the surface should be lower in your rankings than any positive net flow.
      </p>
      <figure xml:id="fig_Vector_FluxInt_FieldPicker">
        <caption>Five vector fields flowing through a surface, with decomposition into normal and tangential components</caption>
        <interactive platform="sage" width="100%" aspect="1:1.05">
          <slate surface="sage">
            var('t,s,u,v,z,y,z')
            f=-x^2/5-3*y^3/8
            @interact
            def _(sb=selector(['Vector Field 1','Vector Field 2','Vector Field 3','Vector Field 4','Vector Field 5'],label="Vector Field:")):
              plot1=plot3d(f,(x,-1,1),(y,-1,1),frame=False,opacity=.3,aspect_ratio=1)
              for i in range(0,5):
                plot1+=parametric_plot3d((s,-1+i/2,f(x=s,y=-1+i/2)),(s,-1,1),color="gray")
                plot1+=parametric_plot3d((-1+i/2,s,f(y=s,x=-1+i/2)),(s,-1,1),color="gray")
              if sb=='Vector Field 1':
                  Fx=x
                  Fy=y
                  Fz=z-x
              if sb=='Vector Field 2':
                  Fx=(y-z)*x
                  Fy=sin(x*z)
                  Fz=-abs(y)+x*z+.2
              if sb=='Vector Field 3':
                  Fx=x
                  Fy=y+x*z
                  Fz=-y-(x*z)/2
              if sb=='Vector Field 4':
                  Fx=cos(z)
                  Fy=sin(x*y)
                  Fz=-cos(y+x)
              if sb=='Vector Field 5':
                  Fx=abs(x)-x*y
                  Fy=x-y
                  Fz=1.5-x*z
              for i in range(0,5):
                for j in range (0,5):
                  posx=-1+i/2
                  posy=-1+j/2
                  posz=f(x=posx,y=posy)
                  F1=Fx(x=posx,y=posy,z=posz)
                  F2=Fy(x=posx,y=posy,z=posz)
                  F3=Fz(x=posx,y=posy,z=posz)
                  plot1+=arrow3d((posx,posy,posz),(posx+F1,posy+F2, posz+F3),color="blue")
                  N=(-diff(f,x)(x=posx,y=posy)/2,-diff(f,y)(x=posx,y=posy)/2,1/2)
                  Nfrac=(F1*N[0]+F2*N[1]+F3*N[2])/(N[0]^2+N[1]^2+N[2]^2)
                  FNx=Nfrac*N[0]
                  FNy=Nfrac*N[1]
                  FNz=Nfrac*N[2]
                  plot1+=arrow3d((posx,posy,posz),(posx+FNx,posy+FNy,posz+FNz),color="green")
                  plot1+=arrow3d((posx+FNx,posy+FNy,posz+FNz),(posx+F1,posy+F2,posz+F3),color="purple")
                  plot1+=arrow3d((.25,.25,-.2),(.3,.2,.3),color="yellow")
              show(plot1)
          </slate>
        </interactive>
      </figure>
    </statement>
  </activity>
</subsection>
<subsection>
  <title>The Details of Measuring the Flux of a Vector Field through a Surface</title>
  <p>
    Now that we have a better conceptual understanding of what we are measuring, we can set up the corresponding Riemann sum to measure the flux of a vector field through a section of a surface. Let <m>Q</m> be the section of our surface and suppose that <m>Q</m> is parametrized by <m>\vr(s,t)</m> with <m>a\leq s\leq b</m> and <m>c \leq t \leq d</m>. The domain of <m>\vr</m> is a region of the <m>st</m>-plane, which we call <m>D</m>, and the range of <m>\vr</m> is <m>Q</m>.
  </p>
  <p>
    In our classic calculus style, we slice our region of interest into smaller pieces. Specifically, we slice <m>a\leq s\leq b</m> into <m>n</m> equally-sized subintervals with endpoints <m>s_1,\ldots,s_n</m> and <m>c \leq t \leq d</m> into <m>m</m> equally-sized subintervals with endpoints <m>t_1,\ldots,t_n</m>. This divides <m>D</m> into <m>nm</m>
    rectangles of size <m>\Delta{s}=\frac{b-a}{n}</m> by <m>\Delta{t}=\frac{d-c}{m}</m>. We index these rectangles as
    <m>D_{i,j}</m>. Every <m>D_{i,j}</m> has area (in the <m>st</m>-plane) of <m>\Delta{s}\Delta{t}</m>. The partition of <m>D</m> into the rectangles <m>D_{i,j}</m> also partitions <m>Q</m> into <m>nm</m> corresponding pieces which we call <m>Q_{i,j}=\vr(D_{i,j})</m>. From <xref ref="S-11-6-Parametric-Surfaces-Surface-Area"/> (specifically <xref ref="eq_11_6_parallelogram_area"/>) the surface area of <m>Q_{i,j}</m> is approximated by <m>S_{i,j}=\vecmag{(\vr_s \times \vr_t)(s_i,t_j)}\Delta{s}\Delta{t}</m>.
  </p>
  <figure xml:id="fig_Vector_FluxInt_SurfaceSections">
    <caption>Pieces of the tangent planes that approximate a surface</caption>
    <interactive platform="sage" width="100%" aspect="1:1.1">
      <slate surface="sage">
        var('t,s,u,v,z,y,z')
        f=-x^2/2-3*y^3/3
        @interact
        def _(n=slider(3,10,1,4,label="Number of Sections in Grid")):
          plot1=plot3d(f,(x,-1,1),(y,-1,1),frame=False,opacity=.3)
          stepsize=2/(n)
          for i in range(0,n):
            a=-1+i*stepsize
            plot1+=parametric_plot3d((s,a,f(x=s,y=a)),(s,-1,1),color="gray")
            plot1+=parametric_plot3d((a,s,f(y=s,x=a)),(s,-1,1),color="gray")
            for j in range(0,n):
              b=-1+j*stepsize
              f_val=f(x=a,y=b)
              pos=(a,b,f_val)
              fx=diff(f,x)(x=a,y=b)
              fy=diff(f,y)(x=a,y=b)
              vt=(stepsize+a,b,stepsize*fx+f_val)
              vs=(a,b+stepsize,stepsize*fy+f_val)
              cr=(a-fx*stepsize,b-fy*stepsize,stepsize+f_val)
              plot1+=parametric_plot3d((a+t*stepsize,b+s*stepsize,f_val+t*stepsize*fx+s*stepsize*fy),(t,0,1),(s,0,1),color="orange",opacity=.6)
              plot1+=arrow3d(pos,cr,color="green")
          show(plot1)
      </slate>
    </interactive>
  </figure>
  <p>
    We want to measure the total flow of the vector field, <m>\vF</m>, through <m>Q</m>, which we approximate on each <m>Q_{i,j}</m> and then sum to get the total flow. In other words, the flux of <m>\vF</m> through <m>Q</m> is
    <me>
      \text{Flux}=\sum_{i=1}^n\sum_{j=1}^m\vecmag{\vF_{\perp
      Q_{i,j}}}\cdot S_{i,j}
    </me>,
    where <m>\vecmag{\vF_{\perp Q_{i,j}}}</m> is the length of the component of <m>\vF</m> orthogonal to <m>Q_{i,j}</m>.
  </p>
  <p>
    For each <m>Q_{i,j}</m>, we approximate the surface <m>Q</m> by the tangent plane to <m>Q</m> at a corner of that partition element. This corresponds to using the planar elements in <xref ref="fig_Vector_FluxInt_SurfaceSections"/>, which have surface area <m>S_{i,j}</m>. The vector <m>\vw_{i,j}=(\vr_s \times \vr_t)(s_i,t_j)</m> can be used to measure the orthogonal direction (and thus define which direction we mean by positive flow through <m>Q</m>) on the <m>i,j</m> partition element. This means that
    <me>
      \vF_{\perp Q_{i,j}} =\vecmag{\proj_{\vw_{i,j}}\vF(s_i,t_j)}
      = \frac{\vF(s_i,t_j)\cdot \vw_{i,j}}{\vecmag{\vw_{i,j}}}
    </me>
  </p>
  <p>
    Combining these pieces, we find that the flux through <m>Q_{i,j}</m> is approximated by
    <md>
      <mrow>\text{Flux through } Q_{i,j} \amp= \vecmag{\vF_{\perp
      Q_{i,j}}}\cdot S_{i,j} 
      = \left(\frac{\vF_{i,j}\cdot \vw_{i,j}}{\vecmag{\vw_{i,j}}} \right)
      \left(\vecmag{\vw_{i,j}}\Delta{s}\Delta{t}\right)
      </mrow>
      <mrow>
       \amp = \left(\vF_{i,j} \cdot (\vr_s \times \vr_t)\right)
       \left(\Delta{s}\Delta{t}\right)
      </mrow>
    </md>, where <m>\vF_{i,j} = \vF(s_i,t_j)</m>.
    Therefore we may approximate the total flux by
    <me>
      \text{Total Flux}=\sum_{i=1}^n\sum_{j=1}^m \left(\vF_{i,j}\cdot \vw_{i,j}\right) \left(\Delta{s}\Delta{t}\right)
    </me>.
    Taking the limit as <m>n,m\rightarrow\infty</m> gives the following result.
  </p>
  <p>
    Conceptually, the above limit shows how the argument in <xref ref="SS-11-6-2-Surface-Area-Parametrically-Defined-Surfaces" /> generalizes when measuring the flux of a vector field through a surface rather than just the surface area. The key difference between the Riemann sum above and Riemann sum used to set up <xref ref="Surface-area" /> is that we are using the dot product of the vector field with the normal vector to the surface (given by <m>\vw_{i,j}=(\vr_s \times \vr_t)(s_i,t_j)</m>) as the scalar value in our sum. This realization give the following theorem which states that the flux through a curved surface in space can be computed using a parameterization of the surface and a double integral over a flat region in the plane of parameter values. 
  </p>
  <theorem xml:id="thm_flux_int_calc">
    <statement>
      <p>
        Let a smooth surface <m>Q</m> be parametrized by <m>\vr(s,t)</m> over a domain <m>D</m>. The total flux of a smooth vector field <m>\vF</m> through <m>Q</m> is given by
        <me>
          \iint_D \vF \cdot (\vr_s \times \vr_t)\, dA
        </me>.
      </p>
    </statement>
  </theorem>
  <p>
    In <xref ref="fig_Vector_FluxInt_SurfaceSections"/>, you can change the number of sections in your partition and see the geometric result of refining the partition. In the next example, we will look at how <xref ref="thm_flux_int_calc" /> is used on a part of a cone and make sense of the vector <m>\vw(t,s)=\vr_s \times \vr_t</m> and the scalar <m>\vF \cdot (\vr_s \times \vr_t)</m>.
  </p>
  <example xml:id="flux_int_example1">
    <p>
      In this example we will compute the flux of the vector field <m>\vF= \langle xz-2, y+x, 1 \rangle </m> over the surface of the cone given by <m>x^2+y^2=z^2</m> with <m>1\leq z \leq 3</m>. The first thing to do to use <xref ref="thm_flux_int_calc" /> is to parameterize our surface and calculate <m>\vw(t,s)=\vr_s \times \vr_t</m> based on that parameterization. 
    </p>
    <p>
      In cylindrical coordinates, our cone is described by <m>r=z</m> which suggests that we can use <m>r</m> and <m>\theta</m> as <m>s</m> and <m>t</m>. Consider the parameterization <m>\vr(s,t)=\langle s \cos(t), s \sin(t), s \rangle </m> with bounds <m>1\leq s \leq 3</m> and <m>0 \leq t \lt 2 \pi</m>. Notice that <m>s</m> is acting as both <m>r</m> and <m>z</m>. Calculating the partial derivatives of <m>\vr</m> gives the following:
      <me>\vr_s = \langle \cos(t), \sin(t), 1 \rangle </me>
      <me>\vr_t = \langle -s \sin(t), s \cos(t), 0 \rangle </me>
      Taking the cross product of <m>\vr_s</m> and <m>\vr_t</m> will give the following vector valued function for <m>\vw</m>:
      <me>\vw= \vr_s \times \vr_t = \langle -s \cos(t), -s \sin(t), s (\cos(t)^2 +\sin(t)^2) \rangle </me>
      which will simplify to 
      <me>\vw=\langle-s \cos(t), -s \sin(t), s \rangle </me>
      This should look familiar-ish because <m>\vw</m> is very close to <m>\vr</m>. If we think of <m>\vr</m> as giving <m>\langle x,y,z\rangle </m>, then <m>\vw = \langle -x, -y, z \rangle </m>. The interact below shows the vectors <m>\vr</m> and <m>\vw</m> for a point on the surface we are examining.
    </p>
    <figure xml:id="fig_Vector_FluxInt_Cone1">
      <caption>A plot of our surface with the parameterization vector in green and the normal vector <m>\vw</m> in red</caption>
      <interactive platform="sage" width="100%" aspect="1:1.12">
        <slate surface="sage">
          var('x,y,z,s,t')
          @interact
          def conepiece(a=slider(1,3,1/2,2,label="s value"),b=slider(0,2*pi,pi/6,pi/2,label="t value")):
            plot2=parametric_plot3d((s*cos(t),s*sin(t),s),(s,1,3),(t,0, 2*pi),color='blue', opacity=.50)
            plot2+=arrow3d((a*cos(b),a*sin(b),a),(0,0,2*a),color='red',thickness=3)
            plot2+=arrow3d((0,0,0),(a*cos(b),a*sin(b),a),color='green')
            show(plot2,aspect_ratio=1)
        </slate>
      </interactive>
    </figure>
    <p>
      In <xref ref="fig_Vector_FluxInt_Cone1" /> you can see that that the normal vector (as calculated from the parameterization) points inside of the cone and this will be the direction of positive flow when measuring the flux of the vector field. Our parameterization will also transform our vector field into a function of <m>s</m> and <m>t</m>; specifcally 
      <me>\vF(s,t)= \langle (s \cos(t))(s) -2, s \sin(t) + s \cos(t) , 1\rangle</me>
      Applying <xref ref="thm_flux_int_calc" /> to our parameterization and vector field gives the following iterated integral:
      <md>
        <mrow> \iint_D \vF \cdot (\vr_s \times \vr_t)\, dA </mrow>
        <mrow> \int_0^{2\pi}\int_1^3 \langle (s \cos(t))(s) -2, s \sin(t) + s \cos(t) , 1\rangle \cdot \langle -s \cos(t), -s \sin(t), s \rangle \enspace ds \enspace dt </mrow>
        <mrow> \int_0^{2\pi}\int_1^3 ((s \cos(t))(s) -2)  (-s \cos(t)) +(-s \sin(t)) (s \sin(t) + s \cos(t)) +s </mrow>
        <mrow> -\frac{62}{3}\pi </mrow>
      </md>
      Note that the result of this flux integral is negative, which means more of the vector field is going out of the cone than is going into the cone. 
    </p>
    <figure xml:id="fig_Vector_FluxInt_Cone2">
      <caption>A plot of our surface with the vector field <m>\vF</m> for an array of points on the surface. The vector field has been scaled down by a factor of 5 in this plot.</caption>
      <interactive platform="sage" width="100%" aspect="1:1.12">
        <slate surface="sage">
          var('x,y,z,s,t')
          N=10
          M=5
          k=5
          plot3=parametric_plot3d((s*cos(t),s*sin(t),s),(s,1,3),(t,0, 2*pi),color='blue', opacity=.50)
          for i in range(0,N):
            for j in range(0,M):
              a=1+j/M*2
              b=0+i/N*2*pi 
              #(a,b)
              plot3+=arrow3d((a*cos(b),a*sin(b),a),(a*cos(b)+1/k*((a*cos(b))*(a)-2), a*sin(b)+1/k*(a*sin(b) + a*cos(b)), 1/k+a),color='orange')
          show(plot3,aspect_ratio=1)
        </slate>
      </interactive>
    </figure>
    <p>
      In <xref ref="fig_Vector_FluxInt_Cone2" /> you can see much more of the vector field is going through to the outside of the cone than inside, which matches with our result of calculating the flux as negative. 
    </p>
  </example>
  <p>
    The next activity asks you to carefully go through the process of calculating the flux of some vector fields through a cylindrical surface.
  </p>
  <activity>
    <title>Checking the Visualization for Flux</title>
    <task>
      <introduction>
      <p>
        <xref ref="fig_Vector_FluxInt_yzsine"/> shows a plot of the vector field <m>\vF=\langle{y,z,2+\sin(x)}\rangle</m> and a	right circular cylinder of radius <m>2</m> and height <m>3</m> (with open top and bottom). Consider the vector field going into the cylinder (toward the <m>z</m>-axis) as corresponding to a positive flux.
      </p>
      <figure xml:id="fig_Vector_FluxInt_yzsine">
        <caption>The vector field <m>\vF=\langle{y,z,2+\sin(x)}\rangle</m> and a right circular cylinder</caption>
        <interactive platform="sage" width="87%" aspect="1:1.05">
          <slate surface="sage">
            var('s,t,x,y,z')
            plot1=parametric_plot3d((2*cos(t),2*sin(t),s),(t,0,2*pi),(s,0,3),opacity=.3,color="gray",frame=False,aspect_ratio=1)
            plot1+=plot_vector_field3d((y,z,2+sin(z)),(x,-3,3),(y,-3,3),(z,-1,4),plot_points=7)
            show(plot1)
          </slate>
        </interactive>
      </figure>
      </introduction>
      <task>
	<statement>
	  <p>Reasoning graphically, do you think the flux of <m>\vF</m> throught the cylinder will be positive, negative, or zero? Be sure to write a few sentences jutifying your answer.</p>
	</statement>
      </task>
    <task>
      <statement>
      <p>
        Parametrize the right circular cylinder of radius <m>2</m>, centered on the <m>z</m>-axis for <m>0\leq z \leq 3</m>. Be sure to give bounds on your parameters.
      </p>
      </statement>
    </task>
    <task>
      <statement>
      <p>
        Based on your parametrization, compute <m>\vr_s</m>, <m>\vr_t</m>, and <m>\vr_s \times \vr_t</m>. Confirm that these vectors are either orthogonal or tangent to the right circular cylinder. Is your orthogonal vector pointing in the direction of positive flux or negative flux?
      </p>
      </statement>
    </task>
    <task>
      <statement>
      <p>
        Use your parametrization to write <m>\vF</m> as a function of <m>s</m> and <m>t</m>.
      </p>
      </statement>
      <hint>
	      <p>The <m>x</m> coordinate is given by the first component of <m>\vr</m>.</p>
      </hint>
    </task>
    <task>
      <statement>
      <p>
        Compute the flux of <m>\vF</m> through the parametrized portion of the right circular cylinder. 
      </p>
      </statement>
    </task>
    <task>
      <statement>
      <p>
        Does your computed value for the flux match your prediction	from earlier?
      </p>
      </statement>
    </task>
    <task>
      <statement>
      <p>
        Use <xref ref="fig_Vector_FluxInt_yzsine_sliders"/> to make an argument about why the flux of <m>\vF=\langle{y,z,2+\sin(x)}\rangle</m> through the right circular cylinder is zero.
      </p>
      <figure xml:id="fig_Vector_FluxInt_yzsine_sliders">
        <caption>The vector field
	<m>\vF=\langle{y,z,2+\sin(x)}\rangle</m> with normal and
	tangential components plotted on a right circular cylinder</caption>
        <interactive platform="sage" width="100%" aspect="1:1.15">
          <slate surface="sage">
            var('t,s,u,v,z,y,z')
            Fx=y
            Fy=z
            Fz=2+sin(x)
            @interact
            def _(n=slider(8,20,2,10,label="Angular Partitions="),m=slider(4,8,1,5,label="Height Partitions=")):
                plot1=parametric_plot3d((2*cos(t),2*sin(t),s),(t,0,2*pi),(s,0,3),opacity=.3,color="gray",frame=False,aspect_ratio=1)
                for i in range(0,m):
                    plot1+=parametric_plot3d((2*cos(t),2*sin(t),i*3/m),(t,0,2*pi),color="black",frame=False,aspect_ratio=1)
                for i in range(0,n):
                    plot1+=parametric_plot3d((2*cos(2*pi*i/n),2*sin(2*pi*i/n),s),(s,0,3),color="black",frame=False,aspect_ratio=1)
                for i in range(0,n):
                    posx=2*cos(2*pi*i/n)
                    posy=2*sin(2*pi*i/n)
                    for j in range (0,m):
                        posz=j*3/m
                        F1=Fx(x=posx,y=posy,z=posz)
                        F2=Fy(x=posx,y=posy,z=posz)
                        F3=Fz(x=posx,y=posy,z=posz)
                        plot1+=arrow3d((posx,posy,posz),(posx+F1,posy+F2, posz+F3),color="blue")
                        N=(-posx,-posy,0)
                        Nfrac=(F1*N[0]+F2*N[1]+F3*N[2])/(N[0]^2+N[1]^2+N[2]^2)
                        FNx=Nfrac*N[0]
                        FNy=Nfrac*N[1]
                        FNz=Nfrac*N[2]
                        plot1+=arrow3d((posx,posy,posz),(posx+FNx,posy+FNy,posz+FNz),color="green")
                        plot1+=arrow3d((posx+FNx,posy+FNy,posz+FNz),(posx+F1,posy+F2,posz+F3),color="purple")
                show(plot1)
          </slate>
        </interactive>
      </figure>
      </statement>
    </task>
    </task>
    <task>
      <statement>
      <p>
        How would the results of the flux calculations be different if we used the vector field <m>\vF=\left\langle{y,z,\cos(xy)+\frac{9}{z^2+6.2}}\right\rangle</m> and the same right circular cylinder? Explain your reasoning.
      </p>
      </statement>
    </task>
    <task>
      <statement>
      <p>
        How would the results of the flux calculations be different if we used the vector field <m>\vF=\langle{y,-x,3}\rangle</m> and the same right circular cylinder? Explain your reasoning.
      </p>
      </statement>
    </task>
  </activity>
<!-- <subsection xml:id="SS_Vector_FluxInt_Calculate">
  <title>Efficiently Calculating Flux Integrals</title> -->
  <p>
    In the exercises for this section, we will look at some computational ideas to help us more efficiently compute the value of a flux integral. In many
    cases, the surface we are looking at the flux through can be written with one coordinate as a function of the others. For simplicity, we consider <m>z=f(x,y)</m>. Additionally, there will be exercises that guide you through common surfaces like spheres and cylinder surfaces. 
  </p>
  
  <remark>
    <p>
      Note that throughout this section, we have implicitly assumed that we can parametrize the surface <m>S</m> in such a way that <m>\vr_s\times \vr_t</m> gives a well-defined normal vector. Technically, this means that the surface be <term>orientable</term>. Most <q>reasonable</q> surfaces are orientable. However, there are surfaces that are not orientable. Perhaps the most famous is formed by taking a long, narrow piece of paper, giving one end a half twist, and then gluing the ends together. Try doing this yourself, but before you twist and glue (or tape), poke a tiny hole through the paper on the line halfway between the long edges of your strip of paper and circle your hole. After gluing, place a pencil with its eraser end on your dot and the tip pointing away. Think of this as a potential normal vector. Keep the eraser on the paper, and follow the middle of your surface around until the first time the eraser is again on the dot. Is your pencil still pointing the same direction relative to the surface that it was before?
    </p>
  </remark>
</subsection>
<subsection>
  <title>Summary</title>
  <p>
    <ul>
      <li>
        <p>
          A flux integral of a vector field, <m>\vF</m>, on a surface in space, <m>S</m>, measures how much of <m>\vF</m> goes through <m>S_1</m>. 
        </p>
      </li>

      <li>
        <p>
          Let the smooth surface, <m>S</m>, be parametrized by <m>\vr(s,t)</m> over a domain <m>D</m>. The total flux of a smooth vector field <m>\vF</m> through <m>S</m> is given by
        <me>
          \iint_D \vF \cdot (\vr_s \times \vr_t)\, dA
        </me>.
        </p>
      </li>

      <li>
        <p>
          If <m>S_1</m> is of the form <m>z=f(x,y)</m> over a domain <m>D</m>, then the total flux of a smooth vector field <m>\vF</m> through <m>S_1</m> is given by
        <me>
          \iint_D \vF(x,y,f(x,y)) \cdot \left\langle
	  -\frac{\partial{f}}{\partial{x}},-\frac{\partial{f}}{\partial{y}},1
	  \right\rangle\,  dA
        </me>.
        </p>
      </li>

    </ul>
  </p>
</subsection>
<xi:include href="exercises/ez-S_Vector_FluxIntegrals.ptx" />
</section>
