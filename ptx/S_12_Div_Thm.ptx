<section xml:id="S_12_Div_Thm">
  <title>The Divergence Theorem</title>
  
    <objectives>
      <ul>
        <li>
          <p>
          What is meant by rotation of a vector field in a plane? 
          </p>
        </li>
        <li>
          <p>
            How can we generalize our two dimensional measurement of rotation to work in three dimensions?
          </p>
        </li>
        <li>
          <p>
            How can you measure the rotational strength of a vector field?
          </p>
        </li>
      </ul>
    </objectives>
    <introduction>
    <p>
      In <xref ref="S_12_5_Div">Section</xref> we examined two (and higher) dimensional vector field for how the strength of the vector field changed in different regions. In particular, we developed the <xref ref="Div_defn">divergence (Definition</xref>) of a vector field as a local (or density) measurement for how the strength of the vector field changes. In many physical settings it is also useful to measure the rotational strength of a vector field at a local scale. For instance, the vector field on the left of <xref ref="Curl_intro_vfs">Figure</xref> shows a vector field which flows in a counterclockwise fashion around the origin. The vector field on the right of <xref ref="Curl_intro_vfs">Figure</xref> shows a vector field which does not have a rotational aspect to its flow.
    </p>
      <figure xml:id="Curl_intro_vfs">
        <caption><p>Examples of vector fields with global rotation properties and without rotation in either the global or local sense.</p></caption>
        <sidebyside widths="45% 45%">
          <image source="images/fig_12_4_ex2_field1"/>
          <image source="images/Div_activity_-x-y"/>
        </sidebyside>
      </figure>
      <p>
        These global ideas of rotation are nice but are not always visually apparent or may only appear in some regions. For instance, the vector field on the left of <xref ref="Curl_intro_vfs2">Figure</xref> seems to have rotation around at least a couple of different points in a global sense. The vector field on the right of <xref ref="Curl_intro_vfs2">Figure</xref> has the rotation of the flows dependant on which quadrant you are examining.
      </p>
      <figure xml:id="Curl_intro_vfs2">
        <caption><p>Examples of vector fields with global rotation properties and without rotation in either the global or local sense.</p></caption>
        <sidebyside widths="45% 45%">
          <image source="images/Div_activity_xy1x"/>
          <image source="images/fig_12_5_vf1"/>
        </sidebyside>
      </figure>
    </introduction>
    <activity xml:id="Curl_PA">
      <introduction>
        <p>
          We would like to measure and understand rotation at the local level for a vector field. In order to investigate this concept, we will look at some two dimensional vector fields and think about whether the vector field shown will rotate a small pinwheel or spinner placed at a particular location.
        </p>
        <figure xml:id="spinner_fig">
          <caption> <p>A picture of our model spinner</p></caption>
          <image source="images/spinner_gif.gif"/>
        </figure>
      </introduction>
        <task xml:id="Curl_PA_task1">
          <p> For this part, look at the vector field in <xref ref="Curl_PA_task1_vf">Figure</xref>.</p>
          <figure xml:id="Curl_PA_task1_vf">
            <image source="images/Curl_-yx_field"/>
          </figure>
            <ol>
              <li>
                <p>Would a small spinner placed at the origin spin clockwise, counterclockwise, or not spin at all?</p>
              </li>
              <li>
                <p>Would a small spinner placed at <m>(1,1)</m> spin clockwise, counterclockwise, or not spin at all?</p>
              </li>
              <li>
                <p>Would a small spinner placed at <m>(-2,1)</m> spin clockwise, counterclockwise, or not spin at all?</p>
              </li>
               <li>
                <p>Are there any points on the <m>xy</m>-plane where the spinner would not turn counterclockwise?</p>
              </li>
            </ol>
        </task>
        <task xml:id="Curl_PA_task2">
          <p> For this part, look at the vector field in <xref ref="Curl_PA_task2_vf">Figure</xref>.</p>
          <figure xml:id="Curl_PA_task2_vf">
            <image source="images/Curl_xy_field"/>
          </figure>
            <ol>
              <li>
                <p>Would a small spinner placed at the origin spin clockwise, counterclockwise, or not spin at all?</p>
              </li>
              <li>
                <p>Would a small spinner placed at <m>(1,1)</m> spin clockwise, counterclockwise, or not spin at all?</p>
              </li>
              <li>
                <p>Would a small spinner placed at <m>(-2,1)</m> spin clockwise, counterclockwise, or not spin at all?</p>
              </li>
               <li>
                <p>Are there any points on the <m>xy</m>-plane where the spinner would turn differently than your descriptions in the previous part of this problem?</p>
              </li>
            </ol>
        </task>
        <task xml:id="Curl_PA_task3">
          <p> For this part, look at the vector field in <xref ref="Curl_PA_task3_vf">Figure</xref>.</p>
          <figure xml:id="Curl_PA_task3_vf">
            <image source="images/Curl_12_field"/>
          </figure>
            <ol>
              <li>
                <p>Would a small spinner placed at the origin spin clockwise, counterclockwise, or not spin at all?</p>
              </li>
              <li>
                <p>Would a small spinner placed at <m>(1,1)</m> spin clockwise, counterclockwise, or not spin at all?</p>
              </li>
              <li>
                <p>Would a small spinner placed at <m>(-2,1)</m> spin clockwise, counterclockwise, or not spin at all?</p>
              </li>
               <li>
                <p>Are there any points on the <m>xy</m>-plane where the spinner would turn differently than your descriptions in the previous part of this problem?</p>
              </li>
            </ol>
        </task>
        <task xml:id="Curl_PA_task4">
          <p> For this part, look at the vector field in <xref ref="Curl_PA_task4_vf">Figure</xref>. You may find it useful to recenter the plot on your point by changing <m>x_0</m> and <m>y_0</m>. You may also zoom in on your point by using the slider labeled zoom. </p>
          <!-- <figure xml:id="Curl_PA_task4_vf">
            <image source="images/Curl_1xxy_field"/>
          </figure> -->
          <figure xml:id="Curl_PA_task4_vf">
            <caption>A Sage applet for solving linear systems</caption>
                    <interactive xml:id="sage_curl_interact" platform="sage" width="110%" aspect="2:5">
                <slate surface="sage">
                    var('x,y,t')
                    @interact
                    def curl_explorer(f=input_box(default=1-x,label="First Component Equation $F_1=$"),g=input_box(default=x*y,label="Second Component Equation $F_2=$"),zoom=slider(-1,3,1,0),x0=input_box(default=1,label="$x_0$"),y0=input_box(default=1,label="$y_0$")):
                        d=2
                        zoom_level=(1/2)^zoom
                        plot1=plot_vector_field((f,g),(x,x0-(d*zoom_level),x0+(d*zoom_level)),(y,y0-(d*zoom_level),y0+(d*zoom_level)),frame=False,axes_labels=["x","y"],aspect_ratio=1)
                        plot1+=point([(x0,y0)],color='red',size=20)+text("$(x_0,y_0)$",(x0+0.1,y0+(0.1)),color='red',fontsize='large',clip=True)
                        show(plot1)
                </slate>
            </interactive>
        </figure>
        <ol>
              <li>
                <p>Would a small spinner placed at the origin spin clockwise, counterclockwise, or not spin at all?</p>
              </li>
              <li>
                <p>Would a small spinner placed at <m>(0,2)</m> spin clockwise, counterclockwise, or not spin at all?</p>
              </li>
              <li>
                <p>Would a small spinner placed at <m>(-2,1)</m> spin clockwise, counterclockwise, or not spin at all?</p>
              </li>
               <li>
                <p>Are there any points on the <m>xy</m>-plane where the spinner would turn differently than your descriptions in the previous part of this problem?</p>
              </li>
            </ol>
            <p> 
          </p>
          
        </task>
    </activity>
    <subsection xml:id="Curl_development">
      <title>Measuring the Circulation Density of a 2D Vector Field</title>
    <p>
      In this subsection, we will develop the measurement of the circulation density for a two dimensional vector field. We will use this 2D measurement to generalize to a notion of rotational strength in higher dimensional cases. 
    </p>

    <p>
      We wish to measure the circulation of a vector field for a path around a point and use this idea to generalize to a circulation density. Specifically, we will measure the circulation of a vector field as we move around a square centered on some point. Using this meausurement, we will look at the density of the circulation by dividing by the area, thus allowing us to compare our measurement across different sized regions. By taking the limit as our square's side length goes to zero, we will have a measurement for how the circulation density can be measured at a point. Just as in our discussion of <xref ref="Div_development">Subsection</xref>, we will look at two dimensional setting first then examine how our argument can be generalized to higher dimensions.
    </p>
    <p>
      Let's start by measuring the circulation around a square with side length <m>2h</m> centered at a point <m>(a,b)</m>. Namely, we will look at the line integral of our vector field as we move along the square curve shown in <xref ref="Curl_dev_square">Figure</xref>.
    </p>
      <figure xml:id="Curl_dev_square">
        <caption><p>A square centered at the point <m>(a,b)</m> with side lengths <m>2h</m> traveled counterclockwise.</p></caption>
        <image width ="55%" source="images/Square_with_arrows"/>
      </figure>
      <p>
        We can parameterize the top edge of the box (in blue) using the parameterization <m> -h\geq t\geq h</m> as <m>\vr_{top}(t) = \langle a+t,b+h\rangle</m>. Similarly, the bottom, right, and left can be parameterized by  <m>\vr_{bottom}(t) = \langle a+t,b-h\rangle</m>,  <m>\vr_{right}(t) = \langle a+h,b+t\rangle</m>, and  <m>\vr_{left}(t) = \langle a-h,b+t\rangle</m>.
      </p>
      <p>
        In order to measure the circulation, we want to know how much of the vector field is parallel to the direction of travel, so along each of the sides of the box, we only need to look at one of the components of the vector field. The only contribution to the circulation on the top and bottom comes from the horizontal component (<m>F_1</m>) and the vertical component (<m>F_2</m>) is all that contributes on the right and left sides. This means that we can simplify our line integrals considerably once we apply <xref ref="LineInt_Param_Thm">Theorem</xref>.
        <me>
          \int_{top} \vF \cdot \vr=\int_{-h}^h \langle F_1,F_2\rangle \cdot \langle -1,0\rangle \enspace dt = \int_{-h}^h -F_1( a+t,b+h) \enspace dt
        </me>
      Similarly we can simplify the appropriate line integrals on the other sides (ordered below as top, left, bottom, right) to get the total circulation around the square to be 
      <me> 
        \verb"Total Circulation" = \int_{\verb"Square"} \vF \cdot \vr  \\
        = \int_{-h}^h -F_1( a+t,b+h) \enspace dt +  \int_{-h}^h -F_2( a-h,b+t) \enspace dt \\ \quad \quad + \int_{-h}^h F_1( a+t,b-h) \enspace dt + \int_{-h}^h F_2( a+h,b+t) \enspace dt
      </me>
      Note that the sign on the top and the left sides end up being switched because the direction of travel on these sides is in the negative coordinate direction. It is important to note that by convention, we talk about "positive" rotation being counterclockwise and "negative" rotaiton being clockwise when looking at these planar graphs. 
      </p>
      <p>
        We will take moment here to apply a Mean Value Theorem argument to the four integrals given above in order to simplify our calculations in the next part. Specifically, We apply the Mean Value Theorem to the first integral to get a value <m>t_{top}^* \in (a-h,a+h)</m> such that
        <me>
        \int_{-h}^h -F_1( a+t,b+h) \enspace dt=  -2h F_1(t_{top}^*,b+h)
      </me>
      Applying the same arguments to the other three integrals in our Total Circulation calculation gives the following:
      <me> 
        \verb"Total Circulation" = \int_{\verb"Square"} \vF \cdot \vr \\
        = \int_{-h}^h -F_1( a+t,b+h) \enspace dt +  \int_{-h}^h -F_2( a-h,b+t) \enspace dt \\
        \quad \quad + \int_{-h}^h F_1( a+t,b-h) \enspace dt + \int_{-h}^h F_2( a+h,b+t) \enspace dt \\
        = -2h F_1(t_{top}^*,b+h) -2h F_2(a-h,t_{left}^*) \\
        \quad \quad + 2h F_1(t_{bottom}^*,b-h)+2h F_2(a+h,t_{right}^*) \\
        =2h(F_2(a+h,t_{right}^*)-F_2(a-h,t_{left}^*))\\
        \quad \quad -2h(F_1(t_{top}^*,b+h)-F_1(t_{bottom}^*,b-h))
      </me>
      where <m>t_{top}^*,t_{bottom}^* \in (a-h,a+h)</m> and <m>t_{left}^*,t_{right}^* \in (b-h,b+h)</m>.
      </p>
    <p>
      Since we are going to take the limit of the total circulation as we shrink the square to the central point <m>(a,b)</m>,
      we will convert our total circulation measurment to a circulation density (rotation per unit area) to be able to compare the results as we change the size of the square. If we have a larger square we will probably have a larger circulation since there is more distance to accumulate how the vector field is moving in the same direction as our path.
    </p>
    <p>
      We will compute our circulation density by the following
      <me>
        \verb"Circulation Density"=\lim_{h\rightarrow 0} \frac{\verb"Total Circulation"}{\verb"Area of Square"} \\
        = \lim_{h\rightarrow 0} \frac{\int_{\verb"Square"} \vF \cdot \vr}{4h^2}\\
        =\lim_{h\rightarrow 0} \frac{F_2(a+h,t_{right}^*)-F_2(a-h,t_{left}^*)}{2h} - \frac{F_1(t_{top}^*,b+h)-F_1(t_{bottom}^*,b-h)}{2h}
      </me>
      Recall the central difference method of evaluating derivatives from page. 48 (1.5.2) and notice that as <m>h</m> goes to zero, then <m>t_{top}^*,t_{bottom}^*</m> must go to <m>a</m> and <m>t_{left}^*,t_{right}^*</m> must go to <m>b</m>. Therefore, our flow density ends up being
          <me> \verb"Circulation Density at the point "(a,b)=
            \frac{\partial F_2}{\partial x} (a,b)-\frac{\partial F_1}{\partial y} (a,b)
          </me>

      </p>
      <p>
      Notice that this argument had a similar flow to the development of divergence in <xref ref="S_12_5_Div">Section</xref>, but the result ended up quite different because what we were measuring was different. Because divergence was developed to measure the change in the strength of the vector field (without regard to the direction), divergence is computed using the partial derivatives of the horizontal component of the vector field with respect to the horizontal variable and the vertical component of the vector field with respect to the vertical variable. The circulation density we just developed
      measures how the direction of the vector field is changing, and thus uses partial derivatives of the components with respect to the transverse variable. In other words, the rotational aspects of the vector field depends on how the horizontal component of the vector field changes when we move vertically (and vice versa).
    </p>

   
    <p>
      We could have used other shapes in the development of the circulation density (other than a square), but the square allowed for a more easily understood set of calculations as the area of our shape was shrunk. Our use of rectangular coordinates made it easiest to use rectangular figures but more general arguements exist..
    </p>
  </subsection>
   <subsection xml:id="Curl_development_3d">
      <title>Measuring the Circulation Density of a 3D Vector Field</title>
    <p>
    
      The previous subsection showed how we can measure the circulation density, or strength of rotation, at a point for a two dimensional vector field. In this subsection, we will look at how this two dimensional measurement can be used to define circulation density for three dimensional vector fields. 
    </p>
    <figure xml:id="rot_in_3d">
      <caption>Trace planes at a point</caption>
      <interactive xml:id="vec_rotation" platform="sage" width="100%" aspect="1:1">
      <slate surface="sage">
        var('t,s')
        a=4
        b=5
        @interact
        def _():
          plot1=sphere((1,2,0),size=.15,color="black",frame=False,aspect_ratio=1,ticks=[[],[]])+parametric_plot3d((t,s,0),(t,-a,a),(s,-a,a),color="red",opacity=.2)
          plot1+=arrow3d((1,2,0),(1,2,2),color="blue",width=3)+parametric_plot3d((t,0,0),(t,-b,b),color="black")
          plot1+=parametric_plot3d((0,t,0),(t,-b,b),color="black")+parametric_plot3d((0,0,t),(t,-b,b),color="black")
          plot1+=text3d("x",(5.5,0,0))+text3d("y",(0,5.5,0))+text3d("z",(0,0,5.5))+text3d("(a,b,c)",(1,3,0.25))
          plot1+=parametric_plot3d((1+cos(t),2+sin(t),1),(t,0,5.5),color="blue",thickness=3)+arrow3d((1+cos(5.5),2+sin(5.5),1),(1+cos(5.75),2+sin(5.75),1),width=5,color="blue")
          show(plot1)
      </slate>
    </interactive>
    </figure>
    <p>
      Let's think a bit about how we want to represent and measure rotation in three dimensions. When we did our development of the circulation density on the <m>xy></m>-plane, we measured the rotational strength at a point <m>(a,b,c)</m> with an axis of rotation coming out of the <m>xy</m>-plane. This coresponds to the axis of rotation being given by the blue vector in <xref ref="rot_in_3d">Figure</xref>. Remember that "positive" rotation corresponds to counterclockwise rotation in the <m>xy</m>-plane. We can generalize this idea to think of rotation in three dimensions as being represented by a vector where 
      <ul>
        <li>the direction of the vector represents the axis of rotation. </li>
        <li>the magnitude of the vector represents the strength of the rotation. </li>
      </ul>
      By convention, we consider positive "rotation" to correspond to counterclockwise rotation when the vector field is viewed looking from the end of the vector to the base. If we look at the same slice of the vector field from the other side in three dimensions, the notion of rotation (clockwise versus counterclockwise) switches exactly with the orientation of the direction. Consider the following to plots of a vector field on the <m>xy</m>-plane when viewed from the positive and negative <m>z</m>-axis. 
    </p>
    <figure xml:id="F_12_2-idea-figs">
        <sidebyside widths="47% 47%" margins="0% 5% 0%">
            <figure>
                <caption><m>\vF</m> from above the <m>xy</m>-plane </caption>
                <image source="images/vf_from_positive"/>
            </figure>
            <figure>
                <caption><m>\vF</m> from below the <m>xy</m>-plane</caption>
                <image source="images/vf_from_negative"/>
            </figure>
        </sidebyside>
    </figure>
    <p>
      Notice that the orientation of the <m>x</m>-axes switches which what changes the sign of our rotational measurement. With this idea of using a vector to represent the rotation of some element, we have enabled all of the tools that vectors allow, especially the projection and linear combination ideas. Remember that projection of a vector <m>/vec{v}</m> onto a vector <m>/vec{u}</m> will give the vector component of <m>/vec{v}</m> that is parallel to <m>/vec{u}</m>. In other words, the projection of <m>/vec{v}</m> onto <m>/vec{u}</m> is how much of <m>/vec{v}</m> is in the direction of <m>/vec{u}</m>. This will allow us to take the vector form of rotation and pull out how much rotation happens around a given axis of rotation.
    </p>
    <p>
      Recall that we have used a set of coordinate vectors (namely <m>\vec{i}</m>, <m>\vec{j}</m>, and <m>\vec{k}</m>) to write other vectors as a linear combination of our base vectors.
      <figure xml:id="ijk_vector_sum">
      <caption>Trace planes at a point</caption>
      <interactive xml:id="ijk_sum" platform="sage" width="125%" aspect="1:1">
      <slate surface="sage">
        d=5
        shift=.5
        var('t,s')
        @interact
        def _(a=slider(-5,5,1,default=1),b=slider(-5,5,1,default=2),c=slider(-5,5,1,default=-1)):
          plot3=arrow3d((1,2,1),(1+a,2+b,1+c),width=2,color="black",frame=False,aspect_ratio=1,ticks=[[],[]])
          plot3+=parametric_plot3d((t,0,0),(t,-d,d),color="black")
          plot3+=parametric_plot3d((0,t,0),(t,-d,d),color="black")+parametric_plot3d((0,0,t),(t,-d,d),color="black")
          plot3+=text3d("x",(5.5,0,0))+text3d("y",(0,5.5,0))+text3d("z",(0,0,5.5))
          plot3+=arrow3d((1,2,1),(1+a,2,1),width=2,color="red")+arrow3d((1,2,1),(1,2+b,1),width=2,color="green")+arrow3d((1,2,1),(1,2,1+c),width=2,color="blue")
          plot3+=arrow3d((1,2+b,1),(1+a,2+b,1),width=2,color="red")+arrow3d((1+a,2,1),(1+a,2+b,1),width=2,color="green")+arrow3d((1+a,2+b,1),(1+a,2+b,1+c),width=2,color="blue")
          print('You can see the black vector, given by $\langle a,b,c \rangle $ decomposed into parts parallel to $\vec{i}$, $\vec{j}$, and $\vec{k}$.') 
          show(plot3)
      </slate>
    </interactive>
    </figure>
      The linear combination of vectors will allow us to build the total rotation vector by measuring the rotational strength in three coordinate direction vectors. Just as in the picture above, we will build our total rotation vector as a sum of <m>\vec{i}</m>, <m>\vec{j}</m>, and <m>\vec{k}</m>. A rotation vector in the direction of <m>\vec{k}</m> at a point <m>(a,b,c)</m> will measure the circulation density at our point restricted to the trace plane <m>z=c</m>.
    </p>

    <figure xml:id="trace_planes_3d">
      <caption>Trace planes at a point</caption>
      <interactive xml:id="trace_planes" platform="sage" width="100%" aspect="1:1">
      <slate surface="sage">
        var('t,s')
        a=3
        b=5
        @interact
        def _():
          plot1=sphere((1,2,1),size=.2,color="black",frame=False,aspect_ratio=1,ticks=[[],[]])+parametric_plot3d((1+t,2+s,1),(t,-a,a),(s,-a,a),color="red",opacity=.2)
          plot1+=arrow3d((1,2,1),(1,2,2),color="blue",width=2)+parametric_plot3d((t,0,0),(t,-b,b),color="black")
          plot1+=parametric_plot3d((0,t,0),(t,-b,b),color="black")+parametric_plot3d((0,0,t),(t,-b,b),color="black")
          plot1+=text3d("x",(5.5,0,0))+text3d("y",(0,5.5,0))+text3d("z",(0,0,5.5))+text3d("(a,b,c)",(1,3,1.25))
          show(plot1)
      </slate>
    </interactive>
    </figure>
    <p> 
      Let's look at how we can measure the circulation density at a point <m>(a,b,c)</m>. We can apply our 2D circulation density to the 3D vector field restricted to the plane <m> z=c</m>. This corresponds to examining the vector field on the red plane shown in <xref ref="trace_planes_3d">Figure</xref>. This means that our red slice with have axes of <m>x</m> and <m>y</m> and axes of rotation for the restricted vector field will be parallel to the <m>z</m>-axis. This is displayed with the blue vector in <xref ref="trace_planes_3d">Figure</xref>. 
    <figure xml:id="trace_planes_3d_xy">
      <caption>Trace planes at a point</caption>
      <interactive xml:id="trace_planes_xy" platform="sage" width="100%" aspect="1:1">
      <slate surface="sage">
        var('t,s')
        a=3
        b=5
        @interact
        def _():
          plot2=sphere((1,2,1),size=.2,color="black",frame=False,aspect_ratio=1,ticks=[[],[]])+parametric_plot3d((1,2+s,1+t),(t,-a,a),(s,-a,a),color="green",opacity=.2)
          plot2+=arrow3d((1,2,1),(2,2,1),color="pink",width=2)+parametric_plot3d((t,0,0),(t,-b,b),color="black")+parametric_plot3d((0,t,0),(t,-b,b),color="black")+parametric_plot3d((0,0,t),(t,-b,b),color="black")
          plot2+=text3d("x",(5.5,0,0))+text3d("y",(0,5.5,0))+text3d("z",(0,0,5.5))+text3d("(a,b,c)",(1.5,1.5,1.5))
          plot2+=parametric_plot3d((1+s,2,1+t),(t,-a,a),(s,-a,a),color="orange",opacity=.2)+arrow3d((1,2,1),(1,3,1),color="purple",width=2)
          show(plot2)
      </slate>
    </interactive>
    </figure>
    Similarly, we can look at the 2D rotational strength for the vector field on either the <m>x</m> or <m>y</m> traces as shown in <xref ref="trace_planes_3d_xy">Figure</xref>. We will measure the rotational strength at a point <m>(a,b,c)</m> using a vector where the length of the vector is a measure of the rotational strength and the direction of the vector gives the axis of rotation. In this way, we can express the rotational strength of a vector field in three dimensions as being the vector sums of the 2D circulation densities on the trace planes. 

    as the linear combination of the rotational strengths using vectors
      Now we make an argument about how to do the same thing on a 3D vf. If we look at rotation at a point (a,b,c), then we can really think of this as the linear combinations of rotations as measured on the planes z=c, y=b, and x=a. Thus we can apply the same argument above to each of the appropriate planes and get the curl as we know it. We will need to take an aside with each plane and talk about how the presentation of each plane relates to whether i, j, or k is going into or out of the page. xy-plane and yz-plane are coming out of the plane where as xz-plane presentation has j going into the page (this is the reason for the alternating sign in some presentaions of the curl formula.
    </p>
<figure xml:id="trace_planes_3d_all">
      <caption>Trace planes at a point</caption>
      <interactive xml:id="trace_planes_all" platform="sage" width="100%" aspect="1:1">
      <slate surface="sage">
        var('t,s')
        a=3
        b=5
        @interact
        def _():
          plot2=sphere((1,2,1),size=.2,color="black",frame=False,aspect_ratio=1,ticks=[[],[]])+parametric_plot3d((1,2+s,1+t),(t,-a,a),(s,-a,a),color="green",opacity=.2)
          plot2+=arrow3d((1,2,1),(2,2,1),color="pink",width=2)+parametric_plot3d((t,0,0),(t,-b,b),color="black")
          plot2+=parametric_plot3d((0,t,0),(t,-b,b),color="black")+parametric_plot3d((0,0,t),(t,-b,b),color="black")
          plot2+=text3d("x",(5.5,0,0))+text3d("y",(0,5.5,0))+text3d("z",(0,0,5.5))+text3d("(a,b,c)",(1.5,1.5,1.5))
          plot2+=parametric_plot3d((1+s,2,1+t),(t,-a,a),(s,-a,a),color="orange",opacity=.2)+arrow3d((1,2,1),(1,3,1),color="purple",width=2)
          plot2+=parametric_plot3d((1+t,2+s,1),(t,-a,a),(s,-a,a),color="red",opacity=.2)+arrow3d((1,2,1),(1,2,2),color="blue",width=2)
          show(plot2)
      </slate>
    </interactive>
    </figure>
  </subsection>
    <definition>
      <statement>
        <p> The definition of the curl goes here. </p>
      </statement>
    </definition>
    <activity xml:id="curl_activity">
        <title>Curl in 3D</title>
        <task xml:id="curl_act_task1">
            <title></title>
            <p>
            Have students look at 3D vector field plot, mention how it is hard to "see" rotation in 3D since we are not used to visualization depth. So we will look at the planes described above.
            Have a sliced plot with z=c for the appropriate value. Ask about whether a spinner will have positive, negative, or no rotation. What direction will the axis of rotation be for this plane? State your answer as a vector.
          </p>
        </task>
        <task xml:id="curl_act_task2">
           <p> Show the other two trace slices of the vector field plots. Ask about value of circulation and axis of rotation for each plane. </p>
        </task>
        <task xml:id="curl_act_task3">
          <p>Have students summarize thier rotation predictions as a linear combination of the vectors representing the axes of rotations.</p>
        </task>
        <task xml:id="curl_act_task4">
          <p>
            Give the algebraic form of the vf. Have students compute the curl. 
          </p>
        </task>
        <task xml:id="curl_act_task5">
          <p>Compare the result of the curl to the prediction from <xref ref="curl_act_task3">Question</xref> </p>
        </task>
    </activity>
<p>
  Include a few 3D vf plots (in calcplot3d? or sage?) with a point included. Give examples where the curl is non-zero, a constant vf, and a point source vf. For the last two examples, talk about how any slice around any point will have the same rotational argument.
</p>
 
<p>
  Include an example where the curl has different values in different quadrants. Maybe include an interact that will allow the user to input a point, toggle whether the curl vector is displayed and have a slider to zoom in around the point. Probably need to include a slider that will change the density of vectors displayed around the point. 
  </p>

  <p>
    Exercises will include several purely calculation based questions
  </p>

  <p>
    Should we have a subsection at the end of each section that shows how to do the relevent graphs and computations in Sage or Calcplot3d?
  </p>
</section>
